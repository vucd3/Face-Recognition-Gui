# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DeleteFaceGui.ui'
#
# Created by: PyQt5 UI code generator 5.15.3
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
import pickle

class DeleteFace(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.MainWindow = MainWindow

        self.msg = QtWidgets.QMessageBox(self.centralwidget)
        self.msg.setWindowTitle("Message")
        self.msg.setGeometry(QtCore.QRect(240, 230, 500, 500))

        self.ok = QtWidgets.QPushButton(self.centralwidget)
        self.ok.setGeometry(QtCore.QRect(480, 160, 89, 31))
        self.ok.setObjectName("ok")
        self.ok.setStyleSheet("background-color: red")

        self.name = QtWidgets.QLineEdit(self.centralwidget)
        self.name.setGeometry(QtCore.QRect(270, 160, 171, 31))
        self.name.setObjectName("name")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(200, 170, 67, 17))
        self.label.setObjectName("label")

        self.quit = QtWidgets.QPushButton(self.centralwidget)
        self.quit.setGeometry(QtCore.QRect(660, 450, 111, 61))
        self.quit.setObjectName("quit")
        self.quit.setStyleSheet("background-color: red")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
    
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.status = True
        self.image_saved = []
        self.image_name = []
        self.image_path = []

        self.faceName = None

        self.ok.clicked.connect(self.delete_face)
        self.quit.clicked.connect(self.quitGui)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "DELETE FACE"))
        self.ok.setText(_translate("MainWindow", "OK"))
        self.label.setText(_translate("MainWindow", "NAME"))
        self.quit.setText(_translate("MainWindow", "QUIT"))

    def showMessage(self):
        if self.status:
            self.msg.setText("Delete face succesfully!")
        else:
            self.msg.setText("No face of {} in system" .format(self.name.text()))
        self.msg.exec()
    
    def processImageFile(self):
        if os.path.getsize("images.pickle") > 0 and self.status:
            with open("images.pickle", "rb") as f:
                data = pickle.load(f)
            
            self.image_saved = data["images"]
            self.image_name = data["names"]
            
            for name in self.image_name:
                if name == self.faceName:
                    self.image_name.remove(name)
                    self.image_saved.remove(self.image_saved[self.image_name.index(name)])
            
            data = {"images": self.image_saved, "names": self.image_name}

            e = open("images.pickle", "wb")
            e.write(pickle.dumps(data))
            e.close()
            
    def delete_face(self):
        self.faceName = self.name.text()

        if self.faceName == "":
            self.msg.setText("Please enter name to delete!")
            self.msg.exec()
        else:
            self.image_path = "Dataset/" + self.faceName

            if os.path.exists(self.image_path):
                images = os.listdir(self.image_path)
                for image in images:
                    os.remove(self.image_path+"/"+image)
                os.rmdir("Dataset/"+self.faceName)
                self.status = True
            else:
                self.status = False

            self.processImageFile()
            self.showMessage()
            self.name.setText("")
            

    def quitGui(self):
        self.MainWindow.close()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = DeleteFace()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
